plugins {
    id "scala"

    id "java-library"

    id "com.github.johnrengelman.shadow" version "7.1.2"
}

sourceSets {
    main.compileClasspath += project.configurations.shadow
    main.runtimeClasspath += project.configurations.shadow

    test.compileClasspath += project.configurations.shadow
    test.runtimeClasspath += project.configurations.shadow

    javadoc.classpath += project.configurations.shadow
    scaladoc.classpath += project.configurations.shadow
}

ext {
    hudiVersion = "0.11.0"
    flinkVersion = "1.14.4"
    hiveVersion = "3.1.3"
}

dependencies {
    implementation("org.scala-lang:scala-library:2.12.15")

    shadow("org.apache.hudi:hudi-hive-sync:${hudiVersion}")
    shadow("org.apache.hudi:hudi-flink:${hudiVersion}") {
        exclude group: "org.apache.flink"
    }

    shadow("org.apache.flink:flink-connector-kafka_2.12:${flinkVersion}")
    implementation("org.apache.flink:flink-scala_2.12:${flinkVersion}")
    implementation("org.apache.flink:flink-clients_2.12:${flinkVersion}")
    implementation("org.apache.flink:flink-avro:${flinkVersion}")
    implementation("org.apache.flink:flink-json:${flinkVersion}")
    shadow("org.apache.flink:flink-avro-confluent-registry:${flinkVersion}") {
        exclude group: "org.apache.kafka", module: "kafka-clients"
    }
    implementation("org.apache.flink:flink-s3-fs-hadoop:${flinkVersion}") {
        exclude group: "org.apache.hadoop"
    }
    shadow("org.apache.flink:flink-hadoop-compatibility_2.12:${flinkVersion}")

    shadow("org.apache.hive:hive-common:${hiveVersion}")
    shadow("org.apache.hive:hive-metastore:${hiveVersion}")

    shadow("org.apache.kafka:kafka-clients:2.8.1")

    shadow("io.confluent:kafka-avro-serializer:7.1.1")

    implementation("org.apache.flink:flink-table:${flinkVersion}")
    implementation("org.apache.flink:flink-table-common:${flinkVersion}")
    implementation("org.apache.flink:flink-table-runtime_2.12:${flinkVersion}")
    implementation("org.apache.flink:flink-table-planner_2.12:${flinkVersion}")

    shadow("joda-time:joda-time:2.10.14")

    shadow("org.apache.commons:commons-math3:3.6.1")
    shadow("commons-lang:commons-lang:2.6")
    shadow("org.apache.commons:commons-compress:1.21")
    shadow("org.apache.commons:commons-crypto:1.1.0")
    shadow("commons-cli:commons-cli:1.5.0")

    testImplementation("junit:junit:4.13.2")
    testImplementation("org.scalatest:scalatest_2.12:3.2.10")
    testImplementation("org.scalatestplus:junit-4-13_2.12:3.2.2.0")
}

shadowJar {
    mergeServiceFiles()

    configurations = [project.configurations.shadow]

    zip64 = true

    dependencies {
        exclude(dependency {
            id.moduleGroup == "org.scala-lang"
        })
        exclude(dependency("org.apache.flink:flink-csv"))
        exclude(dependency("org.apache.flink:flink-dist_2.12"))
        exclude(dependency("org.apache.flink:flink-json"))
        exclude(dependency("org.apache.flink:flink-shaded-zookeeper-3"))
        exclude(dependency("org.apache.flink:force-shading"))
        exclude(dependency("org.apache.flink:flink-table"))
        exclude(dependency {
            it.moduleGroup == "org.apache.hadoop"
        })
        exclude(dependency("com.google.code.findbugs:jsr305"))
        exclude(dependency {
            it.moduleGroup == "org.slf4j"
        })
        exclude(dependency {
            it.moduleGroup == "log4j"
        })
        exclude(dependency {
            it.moduleGroup == "org.apache.logging.log4j"
        })
        exclude(dependency("com.esotericsoftware.kryo:kryo"))
    }
}